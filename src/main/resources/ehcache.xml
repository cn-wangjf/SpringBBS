<ehcache>

    <!-- Sets the path to the directory where cache .data files are created.

        If the path is a Java System Property it is replaced by
        its value in the running VM.

        The following properties are translated:
        user.home - User's home directory
        user.dir - User's current working directory
        java.io.tmpdir - Default temp file path -->
    <diskStore path="java.io.tmpdir" />


    <!--Default Cache configuration. These will applied to caches programmatically created through
        the CacheManager.

        The following attributes are required:

        maxElementsInMemory            - Sets the maximum number of objects that will be created in memory
        eternal                        - Sets whether elements are eternal. If eternal,  timeouts are ignored and the
        element is never expired.
        overflowToDisk                 - Sets whether elements can overflow to disk when the in-memory cache
        has reached the maxInMemory limit.

        The following attributes are optional:
        timeToIdleSeconds              - Sets the time to idle for an element before it expires.
        i.e. The maximum amount of time between accesses before an element expires
        Is only used if the element is not eternal.
        Optional attribute. A value of 0 means that an Element can idle for infinity.
        The default value is 0.
        timeToLiveSeconds              - Sets the time to live for an element before it expires.
        i.e. The maximum time between creation time and when an element expires.
        Is only used if the element is not eternal.
        Optional attribute. A value of 0 means that and Element can live for infinity.
        The default value is 0.
        diskPersistent                 - Whether the disk store persists between restarts of the Virtual Machine.
        The default value is false.
        diskExpiryThreadIntervalSeconds- The number of seconds between runs of the disk expiry thread. The default value
        is 120 seconds.
    -->

    <defaultCache maxElementsInMemory="10000" eternal="false"
                  overflowToDisk="false" timeToIdleSeconds="0" timeToLiveSeconds="0"
                  diskPersistent="false" diskExpiryThreadIntervalSeconds="120" />
    <!--
        fixedRegion 不使用硬盘缓存，所有对象都在内存中，缓存区中的对象永不过期
        freqChangeRegion 缓存区会使用硬盘缓存，
        对象在闲置300秒后就从缓存中清除，且对象的最大存活期限为30分钟，
        缓存区中最大的缓存实例个数为5000个，超出此限的实例将被写到硬盘中

        maxElementsInMemory：缓存中允许创建的最大对象数
        eternal：缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期。
        timeToIdleSeconds：缓存数据的钝化时间，也就是在一个元素消亡之前，两次访问时间的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是 0 就意味着元素可以停顿无穷长的时间。
        timeToLiveSeconds：缓存数据的生存时间，也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间。
        overflowToDisk：内存不足时，是否启用磁盘缓存。
        memoryStoreEvictionPolicy：缓存满了之后的淘汰算法。
            LFU  算法直接淘汰使用比较少的对象，在内存保留的都是一些经常访问的对象。对于大部分网站项目，该算法比较适用。
            LRU  近期最少使用算法
            FIFO 先入先出队列
    -->
    <cache name="fixedRegion" maxElementsInMemory="100" eternal="true" overflowToDisk="false"/>
    <cache name="freqChangeRegion" maxElementsInMemory="5000" eternal="false"
           overflowToDisk="true" timeToIdleSeconds="300" timeToLiveSeconds="1800"/>

</ehcache>